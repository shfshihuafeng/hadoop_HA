From 4d6480aa52195d5ee864d42a6f48481fc9453306 Mon Sep 17 00:00:00 2001
From: Yongjun Zhang <yzhang@cloudera.com>
Date: Tue, 20 Mar 2018 23:55:36 -0700
Subject: [PATCH 2783/2863] CLOUDERA-BUILD. CDH-66029. hdfs snapshotDiff
 /.reserved/raw/... fails on snapshottable
 directories.

(cherry picked from commit faf77db0e7a7853ad1e11ee71f0ea2371e201bf4)

Change-Id: Id035b5f7f5f705b0826418f1cebcdf1f475d8e0b
---
 .../hadoop/hdfs/server/namenode/FSDirectory.java   |   10 ++++++++++
 .../server/namenode/snapshot/SnapshotManager.java  |   14 +++++++++-----
 2 files changed, 19 insertions(+), 5 deletions(-)

diff --git a/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java b/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java
index 4c6455a..7d7c73b 100644
--- a/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java
+++ b/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java
@@ -3709,6 +3709,16 @@ static String resolvePath(String src, byte[][] pathComponents,
     }
   }
 
+  /**
+   * Resolve a /.reserved/... path to a non-reserved path.
+   * See {@link #resolvePath(String, byte[][], FSDirectory) resolvePath}
+   * method.
+   */
+  public String resolvePath(final String path) throws FileNotFoundException {
+    byte[][] pathComponents = getPathComponentsForReservedPath(path);
+    return resolvePath(path, pathComponents, this);
+  }
+
   private static String resolveDotInodesPath(String src,
       byte[][] pathComponents, FSDirectory fsd)
       throws FileNotFoundException {
diff --git a/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/SnapshotManager.java b/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/SnapshotManager.java
index ad0597f..466a4cc 100644
--- a/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/SnapshotManager.java
+++ b/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/SnapshotManager.java
@@ -172,8 +172,9 @@ private void checkNestedSnapshottable(INodeDirectory dir, String path)
    * Set the given directory as a snapshottable directory.
    * If the path is already a snapshottable directory, update the quota.
    */
-  public void setSnapshottable(final String path, boolean checkNestedSnapshottable)
+  public void setSnapshottable(String path, boolean checkNestedSnapshottable)
       throws IOException {
+    path = fsdir.resolvePath(path);
     final INodesInPath iip = fsdir.getINodesInPath4Write(path);
     final INodeDirectory d = INodeDirectory.valueOf(iip.getLastINode(), path);
     if (checkNestedSnapshottable) {
@@ -216,7 +217,8 @@ public void removeSnapshottable(List<INodeDirectory> toRemove) {
    * 
    * @throws SnapshotException if there are snapshots in the directory.
    */
-  public void resetSnapshottable(final String path) throws IOException {
+  public void resetSnapshottable(String path) throws IOException {
+    path = fsdir.resolvePath(path);
     final INodesInPath iip = fsdir.getINodesInPath4Write(path);
     final INodeDirectory d = INodeDirectory.valueOf(iip.getLastINode(), path);
     DirectorySnapshottableFeature sf = d.getDirectorySnapshottableFeature();
@@ -247,8 +249,9 @@ public void resetSnapshottable(final String path) throws IOException {
   *           Throw IOException when the given path does not lead to an
   *           existing snapshottable directory.
   */
-  public INodeDirectory getSnapshottableRoot(final String path)
+  public INodeDirectory getSnapshottableRoot(String path)
       throws IOException {
+    path = fsdir.resolvePath(path);
     final INodeDirectory dir = INodeDirectory.valueOf(fsdir
         .getINodesInPath4Write(path).getLastINode(), path);
     if (!dir.isSnapshottable()) {
@@ -462,11 +465,12 @@ public void write(DataOutput out) throws IOException {
    * Compute the difference between two snapshots of a directory, or between a
    * snapshot of the directory and its current tree.
    */
-  public SnapshotDiffReport diff(final String path, final String from,
+  public SnapshotDiffReport diff(String path, final String from,
       final String to) throws IOException {
     // Find the source root directory path where the snapshots were taken.
     // All the check for path has been included in the valueOf method.
     INodeDirectory snapshotRootDir;
+    path = fsdir.resolvePath(path);
     INodesInPath iip = fsdir.getINodesInPath4Write(path);
     if (this.snapshotDiffAllowSnapRootDescendant) {
       snapshotRootDir = getSnapshottableAncestorDir(iip);
@@ -475,7 +479,7 @@ public SnapshotDiffReport diff(final String path, final String from,
     }
     Preconditions.checkNotNull(snapshotRootDir);
     INodeDirectory snapshotDescendantDir = INodeDirectory.valueOf(
-        fsdir.getINodesInPath4Write(path).getLastINode(), path);
+        iip.getLastINode(), path);
 
     if ((from == null || from.isEmpty())
         && (to == null || to.isEmpty())) {
-- 
1.7.9.5

