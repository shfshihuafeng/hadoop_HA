From f86414e508e4b49a02a2d96aea74ce0d772381c9 Mon Sep 17 00:00:00 2001
From: Jason Lowe <jlowe@apache.org>
Date: Thu, 28 Sep 2017 16:38:30 -0500
Subject: [PATCH 2766/2863] HADOOP-14902. LoadGenerator#genFile write close
 timing is incorrectly calculated. Contributed by
 Hanisha Koneru

(cherry picked from commit 6f789fe05766a61b12ca10df3f26ee354eac84aa)

Conflicts:
	hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/fs/loadGenerator/LoadGenerator.java

(cherry picked from commit ffe42e62c994670ce2bfa83ee961d1651d14b026)

Change-Id: Ie875b400c4fc2840e52766cab9bf866eab2bd8a0
---
 .../hadoop/fs/loadGenerator/LoadGenerator.java     |   11 ++++++++---
 1 file changed, 8 insertions(+), 3 deletions(-)

diff --git a/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/fs/loadGenerator/LoadGenerator.java b/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/fs/loadGenerator/LoadGenerator.java
index 244c16f..0acf475 100644
--- a/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/fs/loadGenerator/LoadGenerator.java
+++ b/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/fs/loadGenerator/LoadGenerator.java
@@ -289,6 +289,7 @@ private void list() throws IOException {
     private void genFile(Path file, long fileSize) throws IOException {
       long startTimestamp = Time.monotonicNow();
       FSDataOutputStream out = null;
+      boolean isOutClosed = false;
       try {
         out = fc.create(file,
             EnumSet.of(CreateFlag.CREATE, CreateFlag.OVERWRITE),
@@ -304,11 +305,15 @@ private void genFile(Path file, long fileSize) throws IOException {
           i -= s;
         }
 
-        startTimestamp = Time.monotonicNow();
-        executionTime[WRITE_CLOSE] += (Time.monotonicNow() - startTimestamp);
+        startTime = Time.monotonicNow();
+        out.close();
+        executionTime[WRITE_CLOSE] += (Time.monotonicNow() - startTime);
         totalNumOfOps[WRITE_CLOSE]++;
+        isOutClosed = true;
       } finally {
-        IOUtils.cleanup(LOG, out);
+        if (!isOutClosed && out != null) {
+          out.close();
+        }
       }
     }
   }
-- 
1.7.9.5

