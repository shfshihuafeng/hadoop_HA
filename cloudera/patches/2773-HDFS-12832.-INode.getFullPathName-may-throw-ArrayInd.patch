From 2860d5984863553f19c35fef62035e93ed3df1cc Mon Sep 17 00:00:00 2001
From: Konstantin V Shvachko <shv@apache.org>
Date: Tue, 28 Nov 2017 17:14:23 -0800
Subject: [PATCH 2773/2863] HDFS-12832. INode.getFullPathName may throw
 ArrayIndexOutOfBoundsException lead to NameNode
 exit. Contribuited by Konstantin Shvachko.

(cherry picked from commit d331762f24b3f22f609366740c9c4f449edc61ac)
(cherry picked from commit 7252e18c30f40bce9d01d5bb77f0ae526f479ad4)

Conflicts:
	hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java

Change-Id: I491559dca4cbdaf8f4c548420cff7069a1955d4b
---
 .../hdfs/server/blockmanagement/BlockManager.java  |   36 +++++++++++++-------
 1 file changed, 24 insertions(+), 12 deletions(-)

diff --git a/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java b/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java
index 27c957c..8aef73a 100644
--- a/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java
+++ b/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java
@@ -50,7 +50,14 @@
 import org.apache.hadoop.metrics2.util.MBeans;
 import org.apache.hadoop.net.Node;
 import org.apache.hadoop.security.UserGroupInformation;
-import org.apache.hadoop.util.*;
+import org.apache.hadoop.util.Daemon;
+import org.apache.hadoop.util.ExitUtil;
+import org.apache.hadoop.util.LightWeightGSet;
+import org.apache.hadoop.util.Time;
+
+import com.google.common.annotations.VisibleForTesting;
+import com.google.common.base.Preconditions;
+import org.apache.hadoop.util.VersionInfo;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@@ -1559,8 +1566,6 @@ int computeReplicationWorkForBlocks(List<List<BlockInfo>> blocksToReplicate) {
       }
 
       // choose replication targets: NOT HOLDING THE GLOBAL LOCK
-      // It is costly to extract the filename for which chooseTargets is called,
-      // so for now we pass in the block collection itself.
       rw.chooseTargets(blockplacement, storagePolicySuite, excludedNodes);
     }
 
@@ -4046,17 +4051,15 @@ public void clearQueues() {
   };
 
   private static class ReplicationWork {
-
     private final BlockInfo block;
-    private final BlockCollection bc;
-
+    private final String srcPath;
+    private final byte storagePolicyID;
     private final DatanodeDescriptor srcNode;
+    private final int additionalReplRequired;
+    private final int priority;
     private final List<DatanodeDescriptor> containingNodes;
     private final List<DatanodeStorageInfo> liveReplicaStorages;
-    private final int additionalReplRequired;
-
     private DatanodeStorageInfo targets[];
-    private final int priority;
 
     public ReplicationWork(BlockInfo block,
         BlockCollection bc,
@@ -4066,7 +4069,8 @@ public ReplicationWork(BlockInfo block,
         int additionalReplRequired,
         int priority) {
       this.block = block;
-      this.bc = bc;
+      this.srcPath = bc.getName();
+      this.storagePolicyID = bc.getStoragePolicyID();
       this.srcNode = srcNode;
       this.srcNode.incrementPendingReplicationWithoutTargets();
       this.containingNodes = containingNodes;
@@ -4080,14 +4084,22 @@ private void chooseTargets(BlockPlacementPolicy blockplacement,
         BlockStoragePolicySuite storagePolicySuite,
         Set<Node> excludedNodes) {
       try {
-        targets = blockplacement.chooseTarget(bc.getName(),
+        targets = blockplacement.chooseTarget(getSrcPath(),
             additionalReplRequired, srcNode, liveReplicaStorages, false,
             excludedNodes, block.getNumBytes(),
-            storagePolicySuite.getPolicy(bc.getStoragePolicyID()), null);
+            storagePolicySuite.getPolicy(getStoragePolicyID()), null);
       } finally {
         srcNode.decrementPendingReplicationWithoutTargets();
       }
     }
+
+    private String getSrcPath() {
+      return srcPath;
+    }
+
+    private byte getStoragePolicyID() {
+      return storagePolicyID;
+    }
   }
 
   /**
-- 
1.7.9.5

